Links:
https://www.geeksforgeeks.org/introduction-to-java/?ref=lbp
https://www.geeksforgeeks.org/differences-jdk-jre-jvm/?ref=lbp
https://www.geeksforgeeks.org/setting-environment-java/?ref=lbp (Image at the top, point 7)

Terms:
JDK
javac
Bytecode
javap
JVM
JRE
JIT compiler (see point 6)

Points:
1) Compiler (javac) converts source code to bytecode and then the interpreter (JVM) executes the bytecode generated by the compiler. This bytecode can run on any platform be it Windows, Linux, or macOS. Each operating system has a different JVM, but the output produced by all the OS is the same after the execution of bytecode. That is why we call java a platform-independent language and thus java provides reusability of code and portability.

2) Main features of java that make it robust are garbage collection, Exception Handling, and memory allocation.

3) In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e it shows ArrayIndexOutOfBound Exception if we try to do so. That’s why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java.

4) Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java. The java programs can be easily distributed on one or more systems that are connected to each other through an internet connection.

5) Java supports multithreading. It is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of the CPU.

6) Just In Time (JIT) compiler compiles code on-demand basics where it only compiles those methods that are called making applications to execute faster.

7) JDK(Java Development Kit): JDK is intended for software developers and includes development tools such as the Java compiler, Javadoc, Jar, and a debugger.
JRE(Java Runtime Environment): JRE contains the parts of the Java libraries required to run Java programs and is intended for end-users. JRE can be viewed as a subset of JDK.
JVM: JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides a runtime environment in which java bytecode can be executed. JVMs are available for many hardware and software platforms.

8) static keyword tells us that this method is accessible without instantiating the class

9) Types of variables: Local, Instance (non-static), Static